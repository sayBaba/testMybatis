<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mybaitis文件的命名空间，不重复 , 指定使用我们接口-->
<mapper namespace = "com.hzit.testMybatis.dao.UserDao">

<resultMap id="user" type="com.hzit.testMybatis.model.User">
    <!-- property java  bean 对象，column 表字段  -->
    <id  property="id" column="id" jdbcType="CHAR" javaType="java.lang.String"></id>
    <result property="userName" column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"></result>
    <result property="password" column="password" jdbcType="VARCHAR" javaType="java.lang.String"></result>
</resultMap>

    <!--查询  resultType 直接返回java userbean/ 返回其他类型，  -->
    <!-- resultMap 必须使用上面定义的 resultMap 文件 -->
    <select id="queryAllUser" resultMap="user">
        select id, user_name, password from tb_user
    </select>


    <!-- 根据id查询用户信息,不提倡使用select * from-->
    <select id="queryUserInfoById" resultType="com.hzit.testMybatis.model.User" parameterType="java.lang.String">
        select id as id ,user_name as userName from tb_user where id = #{id};
    </select>

    <!--数据库增加记录 -->
    <insert id="insetUser" parameterType="com.hzit.testMybatis.model.User" >

        insert into tb_user(id,user_name,password,name,age,sex,birthday,created,updated)
                     values (#{id},#{userName},#{password},#{name},#{age},#{sex},#{birthday},#{created},#{updated});
    </insert>


    <!-- 删除-->
    <delete id="delUserById" parameterType="java.lang.String">
        delete  from tb_user where id = #{id};
    </delete>


    <!-- 修改-->

    <update id="updateUser" parameterType="com.hzit.testMybatis.model.User">

        update tb_user set age = #{age}, name = #{name} where id = #{id};
    </update>



</mapper>


